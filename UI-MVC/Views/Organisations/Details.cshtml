@using BB.BL.Domain.Playlists
@using BB.UI.Web.MVC.Models
@using BB.BL.Domain.Users
@using BB.BL.Domain.Organisations
@using BB.UI.Web.MVC.Controllers.Utils
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@model OrganisationViewWithPlaylist

@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}

    @{
        var organisationSource = "/Content/img/playlistheader.jpg";
        if (@Model.BannerUrl != null)
        {
            organisationSource = FileHelper.GetImagePath("OrganisationsImgPath", @Model.BannerUrl);
        }
    }
    <div class="title organisation-full-banner" style="background-image: url('@organisationSource');">
        &nbsp;
    </div>

    <div> 
        <h1>@Model.Name</h1>
        @if (ViewBag.Following.Equals("None"))
        {
            <a href='javascript:Follow()' class="btn">
                <i class="material-icons">playlist_add</i> Follow
            </a>
        } else if(ViewBag.Following.Equals("Following")) {
            <a href='javascript:UnFollow()' class="btn" style="width: 200px;">
                <i class="material-icons">playlist_add</i> Un follow
            </a>
        }
        else if (ViewBag.Following.Equals("Co-Organiser"))
        {
            <a href='javascript:Leave()' class="btn" style="width: 200px;">
                <i class="material-icons">playlist_add</i> Leave organisation
            </a>
    }
    else if (ViewBag.Following.Equals("Organiser"))
        {

        }
        <hr />
        <p>Organiser: @Model.Organiser.FirstName @Model.Organiser.LastName</p>
        <p>Co-organisers: </p>
        <div class="row more-margin-bottom">
            @foreach (User user in Model.CoOrganiser)
            {
                <div class="co-organiser" style="float:left;">
                    @if (user.ImageUrl != null)
                    {
                    <img class="round" src="~/Content/img/Users/@user.ImageUrl" title="@user.FirstName @user.LastName" />
                    }
                    else
                    {
                    <img class="round" src="~/Content/img/avatar.png" title="@user.FirstName @user.LastName" />
                    }

                </div>
            }
            </div>
           

    </div>
    @if (User.Identity.Name.Equals(Model.Organiser.Email))
    {
        <div>
            <p>
                <a href='javascript:AddOrganiser()' class="btn" style="margin-top: 1em;">
                    <i class="material-icons">playlist_add</i> Add co-organiser
                </a>
                <input class="custom-input-playlists" type="text" id="email" style="top: .25em" />
            </p>
        </div>
    }
    @using (Html.BeginForm())
    {

    
<div class="title">
    <h1>Playlists</h1> in organisation
</div>

<table id="playlists" style="width: 100%">
        <tr>
            <th></th>
            <th></th>
            <th>Name playlist</th>
            <th>Active</th>
            <th></th>
            <th>Description</th>
            <th>tracks</th>
            <th></th>
        </tr>
        @foreach (Playlist playlist in Model.Playlists)
        {
            <tr class="track">
            <td></td>
                <td>
                    @if (playlist.ImageUrl != null)
                    {
                        <img class="playlistart" src="~/Content/img/Playlists/@playlist.ImageUrl" alt="playlist art" style="width: 50px; height: 50px;" />
                    }
                    else
                    {
                        <img class="playlistart" src="~/Content/img/party-dj.png" alt="playlist art" style="width: 50px; height: 50px;" />
                    }

                </td>
                <td class="tracktitle">
                    @playlist.Name
                </td>
                <td>
                    @if (playlist.Active)
                    {
                        <p>Yes</p>
                    }
                    else
                    {
                        <p>No</p>
                    }
                </td>
            <td></td>
                <td class="artist">
                    @playlist.Description
                </td>
                <td>
                    @playlist.PlaylistTracks.Count()
                </td>
                <td>
                @Html.ActionLink("View Playlist", "View", "Playlist", new { id = playlist.Id }, null)
                </td>
                
            </tr>
        }
    </table>
    <br />

        <div>
            Page @(Model.Playlists.PageCount < Model.Playlists.PageNumber ? 0 : Model.Playlists.PageNumber) of @Model.Playlists.PageCount
            @Html.PagedListPager(Model.Playlists, page => Url.Action("Details", new { Model.Id, page }))
        </div>



    }
@if (Model.Organiser.Email.Equals(User.Identity.Name))
{
    <div class="add-playlist">
        <a href='javascript:AddPlaylist()' class="btn btn-right">
            <i class="material-icons">playlist_add</i> add playlist
        </a>
    </div>

}
else
{
    foreach (User user in Model.CoOrganiser)
    {
        if (user.Email.Equals(User.Identity.Name))
        {
            <div class="add-playlist">
                <a href='javascript:AddPlaylist()' class="btn btn-right">
                    <i class="material-icons">playlist_add</i> add playlist
                </a>
            </div>
            
        }
    }
}
<div class="title">
    <h1>
        Dashboard
    </h1>
</div>

<div class="flex-container" >
    <div class="card">

        <div class="chart" data-percent="@Model.Playlists.Count">
            <div class="material-icons" style="font-size:5em;padding-top:35%;left:-125%">playlist</div>

        <div class="chart-text">
            <span>@Model.Playlists.Count</span>Playlists</div></div>
    </div>
    <div class="card">
        <div class="chart" data-percent="@Model.CoOrganiser.Count()">
            <div class="material-icons" style="font-size:5em;padding-top:35%;left:5%;">people</div>

            <div class="chart-text">
                <span>@Model.CoOrganiser.Count()</span>Co organisers
            </div></div>
    </div>
    <div class="card">
        <div>
            <div class="chart" data-percent="@ViewBag.TotalMinutesOfPlaytime">
                <div class="material-icons" style="font-size: 5em; padding-top: 35%; left: 5%;">query_builder</div>

                <div class="chart-text"><span>@ViewBag.TotalMinutesOfPlaytime</span>Minutes of playtime
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div>
            <div class="chart" data-percent="@ViewBag.TotalMinutesOfPlaytime">
                <div class="material-icons" style="font-size:5em;padding-top:35%;left:5%;">import_export</div>

                <div class="chart-text">
                    <span>@ViewBag.TotalMinutesOfPlaytime</span>Total votes
                </div>
            </div>
        </div>
    </div>
</div>

    @section scripts{
    <!--script for loading the charts-->
    <script>
        !function(){var a=function(a,b){var c=document.createElement("canvas");"undefined"!=typeof G_vmlCanvasManager&&G_vmlCanvasManager.initElement(c);var d=c.getContext("2d");if(c.width=c.height=b.size,a.appendChild(c),window.devicePixelRatio>1){var e=window.devicePixelRatio;c.style.width=c.style.height=[b.size,"px"].join(""),c.width=c.height=b.size*e,d.scale(e,e)}d.translate(b.size/2,b.size/2),d.rotate((-0.5+b.rotate/180)*Math.PI);var f=(b.size-b.lineWidth)/2;b.scaleColor&&b.scaleLength&&(f-=b.scaleLength+2);var g=function(a,b,c){c=Math.min(Math.max(0,c||1),1),d.beginPath(),d.arc(0,0,f,0,2*Math.PI*c,!1),d.strokeStyle=a,d.lineWidth=b,d.stroke()},h=function(){var a,c,e=24;d.lineWidth=1,d.fillStyle=b.scaleColor,d.save();for(var e=24;e>=0;--e)0===e%6?(c=b.scaleLength,a=0):(c=.6*b.scaleLength,a=b.scaleLength-c),d.fillRect(-b.size/2+a,0,c,1),d.rotate(Math.PI/12);d.restore()};Date.now=Date.now||function(){return+new Date};var i=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(a){window.setTimeout(a,1e3/60)}}();this.clear=function(){d.clearRect(b.size/-2,b.size/-2,b.size,b.size)},this.draw=function(a){this.clear(),b.scaleColor&&h(),b.trackColor&&g(b.trackColor,b.lineWidth),d.lineCap=b.lineCap;var c;c="function"==typeof b.barColor?b.barColor(a):b.barColor,a>0&&g(c,b.lineWidth,a/100)}.bind(this),this.animate=function(a,c){var d=Date.now();b.onStart(a,c);var e=function(){var f=Math.min(Date.now()-d,b.animate),g=b.easing(this,f,a,c-a,b.animate);this.draw(g),b.onStep(a,c,g),f>=b.animate?b.onStop(a,c):i(e)}.bind(this);i(e)}.bind(this)},b=function(b,c){var d,e={barColor:"#ef1e25",trackColor:"#f9f9f9",scaleColor:"#dfe0e0",scaleLength:5,lineCap:"round",lineWidth:3,size:110,rotate:0,animate:1e3,renderer:a,easing:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b+c:-d/2*(--b*(b-2)-1)+c},onStart:function(){},onStep:function(){},onStop:function(){}},f={},g=0,h=function(){this.el=b,this.options=f;for(var a in e)e.hasOwnProperty(a)&&(f[a]=c&&"undefined"!=typeof c[a]?c[a]:e[a],"function"==typeof f[a]&&(f[a]=f[a].bind(this)));f.easing="string"==typeof f.easing&&"undefined"!=typeof jQuery&&jQuery.isFunction(jQuery.easing[f.easing])?jQuery.easing[f.easing]:e.easing,d=new f.renderer(b,f),d.draw(g),b.dataset&&b.dataset.percent&&this.update(parseInt(b.dataset.percent,10))}.bind(this);this.update=function(a){return a=parseInt(a,10),f.animate?d.animate(g,a):d.draw(a),g=a,this}.bind(this),h()};window.EasyPieChart=b}();

        var options = {
            scaleColor: false,
            trackColor: 'rgba(0,0,0,0.3)',
            barColor: '#000000',
            lineWidth: 8,
            lineCap: 'butt',
            size: 200
        };

        window.addEventListener('DOMContentLoaded', function() {
            var charts = [];
            [].forEach.call(document.querySelectorAll('.chart'),  function(el) {
                charts.push(new EasyPieChart(el, options));
            });
        });
    </script>

        <script>
            function Leave() {
                $.ajax({
                    url: "/Organisations/LeaveOrganisation",
                    type: "POST",
                    data: {
                        organisationId: @Model.Id, email: "@User.Identity.Name"
                    },
                    succes: function (e){

                    },
                    error: function (e){
                        notie.alert(3, "Could not leave this organisation", 3);
                    }
                })
                .done(function (){
                    window.location.href = '@Url.Action("Details", new { id = Model.Id})';
                });
            }
</script>
<script>
            function UnFollow() {
                $.ajax({
                    url: "/Organisations/UnFollowOrganisation",
                    type: "POST",
                    data: {
                        organisationId: @Model.Id, email: "@User.Identity.Name"
                    },
                    succes: function (e){

                    },
                    error: function (e){
                        notie.alert(3, "Could not unfollow this organisation", 3);
                    }
                })
                .done(function (){
                    window.location.href = '@Url.Action("Details", new { id = Model.Id})';
                });
            }
</script>
        <script>
            function Follow() {
                $.ajax({
                    url: "/Organisations/FollowOrganisation",
                    type: "POST",
                    data: {
                        organisationId: @Model.Id, email: "@User.Identity.Name"
                    },
                    succes: function (e){

                    },
                    error: function (e){
                        notie.alert(3, "Could not follow this organisation", 3);
                    }
                })
                .done(function (){
                    window.location.href = '@Url.Action("Details", new { id = Model.Id})';
                });
            }
        </script>
        <script>
            function AddPlaylist(){
                window.location.href = '@Url.Action("Create", "Playlist")';
            }
        </script>
        <script>
            function AddOrganiser() {

                var email = document.getElementById("email").value;

                $.ajax({
                    url: "/Organisations/AddCoOrganiser",
                    type: "POST",
                    data: {
                        organisation: @Model.Id, mail: email
                    },
                    succes: function (e){

                    },
                    error: function (e){
                        notie.alert(3, "email not found or already in organisation", 3);
                    }

                })
                .done(function (){
                    window.location.href = '@Url.Action("Details", new { id = Model.Id})';
                });
            }
        </script>
    }
