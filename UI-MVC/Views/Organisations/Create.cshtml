@model BB.UI.Web.MVC.Models.OrganisationViewModel

@{
    ViewBag.Title = "Create";
}

<div class="title">
    <h1>Create</h1>
    a new organisation
</div>

@using (Html.BeginForm("Create","Organisations", null, FormMethod.Post, new {enctype = "multipart/form-data", @id="form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="col-md-10" id="custom-inputform-organisations">
        <hr />


        <div class="first-form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label"})
            <br/>
            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "custom-validation"})
        </div>
        <div>
            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "custom-input-organisations"}}) 
        </div>

        <div class="other-form-groups">
            <label>Organisation logo: </label>
            <br />
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "custom-validation" })
        </div>
        <div>
            <input type="file" id="avatarImage" name="avatarImage" style="display: none"/>
            <div class="custom-input-organisations" style="overflow: hidden">
                <text id="avatarLabel" class="form-label">Click right to select logo image</text>
                <i class="material-icons form-img-icon"id="avatar_click">image</i>
            </div> 
        </div> 

        <div class="other-form-groups">
            @Html.LabelFor(model => model.BannerUrl, htmlAttributes: new {@class = "control-label"})
            <br/>
            @Html.ValidationMessageFor(model => model.BannerUrl, "", new {@class = "custom-validation"})
        </div>
         <div>
             <input type="file" id="bannerImage" name="bannerImage" style="display: none"/>
             <div class="custom-input-organisations"  style="overflow: hidden">
                 <text id="bannerLabel" class="form-label">Click right to select banner image</text>
                 <i class="material-icons form-img-icon"  id="banner_click" >image</i>
             </div>
        </div>

       

        
            <div style="margin-top: 14px">
                @Html.LabelFor(model => model.ColorScheme, htmlAttributes: new {@class = "control-label"})
                <br />
                @Html.ValidationMessageFor(model => model.ColorScheme, "", new {@class = "custom-validation"})
            </div>
            <div>
                @Html.EditorFor(model => model.ColorScheme, new {htmlAttributes = new {@class = "custom-input-organisations"}})
            </div>
            

        
            <div>
                <input type="submit" value="Create my organisation" class="btn btn-default create" />
            </div>
       
    </div>
}
<script>
    document.getElementById('avatar_click').onclick = function () {
        document.getElementById('avatarImage').click();
    };
    document.getElementById('banner_click').onclick = function () {
        document.getElementById('bannerImage').click();
    };

    document.getElementById("bannerImage").onchange = function () {
        var filename = document.getElementById("bannerImage").value;
        var lastIndex = filename.lastIndexOf("\\");
        if (lastIndex >= 0) {
            filename = filename.substring(lastIndex + 1);
        }
        document.getElementById("bannerLabel").innerText = filename;
    };
    document.getElementById("avatarImage").onchange = function () {
        var filename = document.getElementById("avatarImage").value;
        var lastIndex = filename.lastIndexOf("\\");
        if (lastIndex >= 0) {
            filename = filename.substring(lastIndex + 1);
        }
        document.getElementById("avatarLabel").innerText = filename;
    };
</script>



