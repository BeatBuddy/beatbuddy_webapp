@using BB.BL.Domain.Playlists
@using BB.UI.Web.MVC.Models
@model BB.BL.Domain.Playlists.Playlist

@{
    ViewBag.Title = "View";
}

<div class="title" style="margin-bottom: 1em">
    <h1>Playlist</h1> @Html.DisplayFor(model => model.Name)
</div>

<div>
    @if (Model.ImageUrl != null)
    {
        <img class="borderround" src="~/Content/img/Playlists/@Model.ImageUrl" style="width: 170px; height: 170px" />
    }
    else
    {
        <img class="borderround" src="~/Content/img/playlist.png" style="width: 170px; height: 170px" />
    }

</div>


<div id="playlist-view" style="margin-top: 1em">
    @Html.Partial("PlaylistTable", @Model)
</div>

<a href="#addTrackModal" class="btn btn-right" style="margin-top: 1em;">
    <i class="material-icons">playlist_add</i> add track
</a>

<div id="addTrackModal" class="modal" style="margin-top: -140px">
    <div class="modal-content" style="width: 30%; height: 70%">
        <a href="#close" id="close-modal" title="Close" class="close">X</a>
        <div class="modal-body" style="height: 100%; width: 100%">
            @{
                Html.RenderPartial("AddTrack");
            }
        </div>
    </div>
</div>



<div id="nowPlayingRow" style="margin-top: 5em">
    @if (Model.PlaylistTracks.Count != 0)
    {
        <a class="btn" id="playBtn"><i id="icon" class="material-icons">play_arrow</i> </a>
    }
    else
    {
        <a class="btn disabled" id="playBtn"><i id="icon" class="material-icons">play_arrow</i> </a>
    }
    <a class="btn disabled" id="nextBtn"><i id="icon" class="material-icons">skip_next</i> </a>

    <div class="title" style="margin-top: 0.5em">
        <h1>Now Playing </h1> <span id="nowPlaying"></span>
    </div>
    <span id="time"></span>
    <div id="myProgress" class="progress">
        <div id="myBar" class="bar"></div>
    </div>
</div>
<div id="player" style="display: none">
</div>

@section Scripts{
    <script>
        var markup = '<li class="track" data-id="${TrackSource.TrackId}">' +
            '<img class="thumbnail" src="${CoverArtUrl}"/>' +
            '<span class="artist">${Artist}</span>' +
            '<span class="tracktitle">${Title}</span>' +
            '</li>';
        $.template("trackTemplate", markup);

        $.ajaxSetup({
            beforeSend: function () {
                $("#loading").show();
            },
            complete: function () {
                $("#loading").hide();
            }
        });
        $("#loading").hide();

        function fetchQueryResults() {
            $.ajax('@Url.Action("SearchTrack")/?q=' + $('#query').val())
                .done(function (result) {
                    $("#results").empty();
                    $.tmpl("trackTemplate", result).appendTo("#results");
                    $("#results li").on("click", function () {
                        addTrack($(this).attr('data-id'));
                    });
                })
                .fail(function () {
                    alert("error");
                });
        }

        function addTrack(id) {
            $.ajax({
                url: '@Url.Action("AddTrack")',
                method: 'POST',
                data: { playlistId: @ViewBag.PlaylistId, id: id }
            }).done(function () {
                window.location.href = @ViewBag.PlaylistId + '#close';
                updatePlaylist();
                    var playBtn = document.getElementById('playBtn');
                    playBtn.className = 'btn';
                })
                .fail(function() {
                    alert('Failed!');
                });
        }

        function debounce(func, wait, immediate) {
            var timeout;
            return function() {
                var context = this, args = arguments;
                var later = function() {
                    timeout = null;
                    if (!immediate) func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) func.apply(context, args);
            };
        };

        var debouncedFetch = debounce(function() {
            fetchQueryResults();
        }, 500);

        $("#query").on('keydown', function() {
            debouncedFetch();
        });

        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        var player;

        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: 'cdwal5Kw3Fc',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
            player.setPlayBackQuality('small');
        }

        var firstPlay = true;

        function onPlayerReady(event) {
            if (firstPlay) {
                var playButton = document.getElementById("playBtn");
                playButton.addEventListener("click", getNextTrack);

                firstPlay = false;
            }
            var nextButton = document.getElementById("nextBtn");
            nextButton.addEventListener("click", function() {
                getNextTrack();
            });


        }
        function updateTime() {
            var time = document.getElementById("time");
            var currentTime = secondsToTime(player.getCurrentTime());
            var duration = secondsToTime(player.getDuration());
            time.innerHTML = currentTime +' | ' + duration;
            var percentageTime = (player.getCurrentTime() / player.getDuration()) * 100;
            var bar = document.getElementById("myBar");
            bar.style.width = percentageTime + '%';
        }
        function secondsToTime(secs)
        {
            d = Number(secs);
            var h = Math.floor(d / 3600);
            var m = Math.floor(d % 3600 / 60);
            var s = Math.floor(d % 3600 % 60);
            return ((h > 0 ? h + ":" + (m < 10 ? "0" : "") : "") + m + ":" + (s < 10 ? "0" : "") + s);
        }
        function onPlayerStateChange(event) {
            var playButton = document.getElementById("playBtn");
            playButton.removeEventListener("click", getNextTrack);
            var icon = document.getElementById("icon");
            if (event.data == YT.PlayerState.PLAYING) {
                playButton.addEventListener("click", function() {
                    player.pauseVideo();
                });
                icon.innerHTML = 'pause';
            }
            if (event.data == YT.PlayerState.PAUSED) {
                icon.innerHTML = 'play_arrow';
                playButton.addEventListener("click", function() {
                    player.playVideo();
                });
            }
            if (event.data == YT.PlayerState.ENDED) {
                getNextTrack();
            }

        }

        function getNextTrack() {
            $.ajax('/Playlist/GetNextTrack/', {
                type: 'GET',
                data: { id: @ViewBag.PlaylistId },
                contentType : "application/json",
                dataType : "json"
            }).done(function(data) {
                if (data!=null) {
                    player.loadVideoById(data.trackId);
                    document.getElementById("nowPlaying").innerHTML = data.trackName + ' - ' + data.artist;
                    $(function() {
                        setInterval(updateTime, 50);
                    });
                    var nextButton = document.getElementById("nextBtn");
                    if (data.nextTracks === 1) {
                        nextButton.className = 'btn disabled';
                    } else {
                        nextButton.className = 'btn';
                    }
                    moveTrackToHistory();
                }
            }).fail(function() {
                var playBtn = document.getElementById('playBtn');
                playBtn.className = 'btn disabled';
                document.getElementById("nowPlaying").innerHTML = '';
            });
        }

        function moveTrackToHistory() {
            $.ajax('/Playlist/MoveTrackToHistory/', {
                type: 'POST',
                data: { id: @ViewBag.PlaylistId }
            }).done(function() {
                updatePlaylist();
            }).fail(function() {
                var nextButton = document.getElementById("nextBtn");
                nextButton.className = 'btn disabled';
                var playButton = document.getElementById("playBtn");
                playButton.className = 'btn disabled';
                var icon = document.getElementById("icon");
                icon.innerHTML = 'play_arrow';
            });
        }
        function stopVideo() {
            player.stopVideo();
        }
        function updatePlaylist() {
            $('#playlist-view').load('/Playlist/GetPlaylist/',{id: @ViewBag.PlaylistId});
        }

    </script>
}