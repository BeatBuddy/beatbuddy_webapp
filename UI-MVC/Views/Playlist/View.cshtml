@using BB.BL.Domain.Playlists
@using BB.UI.Web.MVC.Models
@model BB.BL.Domain.Playlists.Playlist

@{
    ViewBag.Title = "View";
}

<div class="title">
    <h1>Playlist</h1> @Html.DisplayFor(model => model.Name)
</div>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MaximumVotesPerUser)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MaximumVotesPerUser)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Active)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Active)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImageUrl)
        </dd>
    </dl>
</div>

<div class="title">
    <h1>Queue</h1>
    @if (Model.PlaylistTracks.Count > 1 | Model.PlaylistTracks.Count == 0)
    {
        <text>@Model.PlaylistTracks.Count tracks in queue</text>
    }
    else
    {
        <text>1 track in queue</text>
    }
</div>

<table id="playlist-tracks">
    <tr>
        <th></th>
        <th></th>
        <th>Title</th>
        <th></th>
        <th></th>
        <th>Artist</th>
        <th>Album</th>
    </tr>
    @foreach (PlaylistTrack track in Model.PlaylistTracks)
    {
        <tr class="track">
            <td>
                @track.Id
            </td>
            <td>
                <img class="albumart" src="@track.Track.CoverArtUrl" alt="album art"/>
            </td>
            <td class="tracktitle">
                @track.Track.Title
            </td>
            <td>
                thumbs
            </td>
            <td>
                3:30
            </td>
            <td class="artist">
                @track.Track.Artist
            </td>
            <td>
                album
            </td>
        </tr>
    }
</table>

<a href="#addTrackModal" class="btn btn-right" style="margin-top: 1em;">
    <i class="material-icons">playlist_add</i> add track
</a>
<div id="addTrackModal" data-toggle="modal" class="modal" style="margin-top: -90px">
    <div class="modal-content" style="width: 620px; height: 530px">
        <a href="#close" title="Close" class="close">X</a>
        <div class="modal-body" style="margin-left: 60px; width: 100%">
            @{
                Html.RenderPartial("_AddTrack", null);
            }
            @section scripts{
    <script>
        var markup = '<li class="track" data-id="${TrackSource.TrackId}">' +
            '<img class="thumbnail" src="${CoverArtUrl}"/>' +
            '<span class="artist">${Artist}</span>' +
            '<span class="tracktitle">${Title}</span>' +
            '</li>';
        $.template("trackTemplate", markup);

        $.ajaxSetup({
            beforeSend: function () {
                $("#loading").show();
            },
            complete: function () {
                $("#loading").hide();
            }
        });
        $("#loading").hide();

        function fetchQueryResults() {
            $.ajax('@Url.Action("SearchTrack")/?q=' + $('#query').val())
                .done(function (result) {
                    $("#results").empty();
                    $.tmpl("trackTemplate", result).appendTo("#results");
                    $("#results li").on("click", function () {
                        addTrack($(this).attr('data-id'));
                    });
                })
                .fail(function () {
                    alert("error");
                });
        }

        function addTrack(id) {
            $.ajax({
                url: '@Url.Action("AddTrack")',
                method: 'POST',
                data: { playlistId: @ViewBag.PlaylistId, id: id }
            }).done(function () {
                window.location.href = '@Url.Action("View", new { id = @ViewBag.PlaylistId })';
            })
            .fail(function () {
                alert('Failed!');
            });
        }

        function debounce(func, wait, immediate) {
            var timeout;
            return function () {
                var context = this, args = arguments;
                var later = function () {
                    timeout = null;
                    if (!immediate) func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) func.apply(context, args);
            };
        };

        var debouncedFetch = debounce(function () {
            fetchQueryResults();
        }, 500);

        $("#query").on('keydown', function () {
            debouncedFetch();
        });
    </script>
            }
        </div>
    </div>
</div>

<div id="player">
    <h1>Now playing ▶</h1>
</div>

