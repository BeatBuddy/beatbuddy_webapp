@model BB.UI.Web.MVC.Models.PlaylistViewModel

@using (Html.BeginForm("Edit", "Playlist", null, FormMethod.Post, new { enctype = "multipart/form-data", @id = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="row" id="custom-inputform-playlists">
        <div class="title">
            <h1>Update</h1> your playlist
        </div>
        <hr style="width: 82%"/>

        <div class="first-form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "custom-input-playlists"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "custom-validation"})
            </div>
        </div>

        <div class="first-form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Description, new {@class = "custom-input-playlists"})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "custom-validation"})
            </div>
        </div>

        <div class="first-form-group">
            @Html.LabelFor(model => model.Key, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.Key, new {htmlAttributes = new {@class = "custom-input-playlists"}})
                @Html.ValidationMessageFor(model => model.Key, "", new {@class = "custom-validation"})
            </div>
        </div>

        <div class="other-form-groups">
            @Html.LabelFor(model => model.MaximumVotesPerUser, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.MaximumVotesPerUser, new {htmlAttributes = new {@class = "custom-input-playlists"}})
                @Html.ValidationMessageFor(model => model.MaximumVotesPerUser, "", new {@class = "custom-validation"})
            </div>
        </div>

        <div class="other-form-groups">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                <div>
                    <input type="file" id="avatarImage2" name="avatarImage" style="display: none"/>
                    <div class="custom-input-playlists" style="overflow: hidden">
                        <text id="avatarLabel2" class="form-label">Select logo image...</text>
                        <i class="material-icons form-img-icon" id="avatar_click2">image</i>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new {@class = "custom-validation"})
            </div>
        </div>
        <div class="col-md-12">
            <input type="submit" value="Update my playlist" class="btn btn-default create"/>
        </div>
    </div>
}
<script>
    document.getElementById('avatar_click2').onclick = function () {
        document.getElementById('avatarImage2').click();
    };
        document.getElementById("avatarImage2").onchange = function () {
        var filename = document.getElementById("avatarImage2").value;
        var lastIndex = filename.lastIndexOf("\\");
        if (lastIndex >= 0) {
            filename = filename.substring(lastIndex + 1);
        }
        document.getElementById("avatarLabel2").innerText = filename;
    };
</script>

